<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kotlin.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.kotlin.bean.User">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
    <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="user_description" jdbcType="VARCHAR" property="userDescription" />
    <result column="user_gender" jdbcType="VARCHAR" property="userGender" />
    <result column="registDate" jdbcType="TIMESTAMP" property="registdate" />
    <result column="video_count" jdbcType="BIGINT" property="videoCount" />
    <result column="follow_count" jdbcType="BIGINT" property="followCount" />
    <result column="fans_count" jdbcType="BIGINT" property="fansCount" />
    <result column="collection_count" jdbcType="BIGINT" property="collectionCount" />
    <result column="like_count" jdbcType="BIGINT" property="likeCount" />
    <result column="share_count" jdbcType="BIGINT" property="shareCount" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_name, user_pwd, user_avatar, user_type, user_description, user_gender, 
    registDate, video_count, follow_count, fans_count, collection_count, like_count, 
    share_count, role_id
  </sql>
  <select id="selectByExample" parameterType="com.kotlin.bean.example.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.kotlin.bean.example.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kotlin.bean.User">
    insert into user (user_id, user_name, user_pwd, 
      user_avatar, user_type, user_description, 
      user_gender, registDate, video_count, 
      follow_count, fans_count, collection_count, 
      like_count, share_count, role_id
      )
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR}, 
      #{userAvatar,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, #{userDescription,jdbcType=VARCHAR}, 
      #{userGender,jdbcType=VARCHAR}, #{registdate,jdbcType=TIMESTAMP}, #{videoCount,jdbcType=BIGINT}, 
      #{followCount,jdbcType=BIGINT}, #{fansCount,jdbcType=BIGINT}, #{collectionCount,jdbcType=BIGINT}, 
      #{likeCount,jdbcType=BIGINT}, #{shareCount,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kotlin.bean.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPwd != null">
        user_pwd,
      </if>
      <if test="userAvatar != null">
        user_avatar,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="userDescription != null">
        user_description,
      </if>
      <if test="userGender != null">
        user_gender,
      </if>
      <if test="registdate != null">
        registDate,
      </if>
      <if test="videoCount != null">
        video_count,
      </if>
      <if test="followCount != null">
        follow_count,
      </if>
      <if test="fansCount != null">
        fans_count,
      </if>
      <if test="collectionCount != null">
        collection_count,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="shareCount != null">
        share_count,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="userDescription != null">
        #{userDescription,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null">
        #{userGender,jdbcType=VARCHAR},
      </if>
      <if test="registdate != null">
        #{registdate,jdbcType=TIMESTAMP},
      </if>
      <if test="videoCount != null">
        #{videoCount,jdbcType=BIGINT},
      </if>
      <if test="followCount != null">
        #{followCount,jdbcType=BIGINT},
      </if>
      <if test="fansCount != null">
        #{fansCount,jdbcType=BIGINT},
      </if>
      <if test="collectionCount != null">
        #{collectionCount,jdbcType=BIGINT},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=BIGINT},
      </if>
      <if test="shareCount != null">
        #{shareCount,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kotlin.bean.example.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPwd != null">
        user_pwd = #{record.userPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.userAvatar != null">
        user_avatar = #{record.userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=VARCHAR},
      </if>
      <if test="record.userDescription != null">
        user_description = #{record.userDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.userGender != null">
        user_gender = #{record.userGender,jdbcType=VARCHAR},
      </if>
      <if test="record.registdate != null">
        registDate = #{record.registdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.videoCount != null">
        video_count = #{record.videoCount,jdbcType=BIGINT},
      </if>
      <if test="record.followCount != null">
        follow_count = #{record.followCount,jdbcType=BIGINT},
      </if>
      <if test="record.fansCount != null">
        fans_count = #{record.fansCount,jdbcType=BIGINT},
      </if>
      <if test="record.collectionCount != null">
        collection_count = #{record.collectionCount,jdbcType=BIGINT},
      </if>
      <if test="record.likeCount != null">
        like_count = #{record.likeCount,jdbcType=BIGINT},
      </if>
      <if test="record.shareCount != null">
        share_count = #{record.shareCount,jdbcType=BIGINT},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_pwd = #{record.userPwd,jdbcType=VARCHAR},
      user_avatar = #{record.userAvatar,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=VARCHAR},
      user_description = #{record.userDescription,jdbcType=VARCHAR},
      user_gender = #{record.userGender,jdbcType=VARCHAR},
      registDate = #{record.registdate,jdbcType=TIMESTAMP},
      video_count = #{record.videoCount,jdbcType=BIGINT},
      follow_count = #{record.followCount,jdbcType=BIGINT},
      fans_count = #{record.fansCount,jdbcType=BIGINT},
      collection_count = #{record.collectionCount,jdbcType=BIGINT},
      like_count = #{record.likeCount,jdbcType=BIGINT},
      share_count = #{record.shareCount,jdbcType=BIGINT},
      role_id = #{record.roleId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kotlin.bean.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        user_avatar = #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="userDescription != null">
        user_description = #{userDescription,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null">
        user_gender = #{userGender,jdbcType=VARCHAR},
      </if>
      <if test="registdate != null">
        registDate = #{registdate,jdbcType=TIMESTAMP},
      </if>
      <if test="videoCount != null">
        video_count = #{videoCount,jdbcType=BIGINT},
      </if>
      <if test="followCount != null">
        follow_count = #{followCount,jdbcType=BIGINT},
      </if>
      <if test="fansCount != null">
        fans_count = #{fansCount,jdbcType=BIGINT},
      </if>
      <if test="collectionCount != null">
        collection_count = #{collectionCount,jdbcType=BIGINT},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=BIGINT},
      </if>
      <if test="shareCount != null">
        share_count = #{shareCount,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kotlin.bean.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      user_avatar = #{userAvatar,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      user_description = #{userDescription,jdbcType=VARCHAR},
      user_gender = #{userGender,jdbcType=VARCHAR},
      registDate = #{registdate,jdbcType=TIMESTAMP},
      video_count = #{videoCount,jdbcType=BIGINT},
      follow_count = #{followCount,jdbcType=BIGINT},
      fans_count = #{fansCount,jdbcType=BIGINT},
      collection_count = #{collectionCount,jdbcType=BIGINT},
      like_count = #{likeCount,jdbcType=BIGINT},
      share_count = #{shareCount,jdbcType=BIGINT},
      role_id = #{roleId,jdbcType=BIGINT}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>


  <select id="checkUserLogin" parameterType="com.kotlin.bean.User" resultType="com.kotlin.bean.User">

    SELECT *
    FROM USER
    WHERE USER_NAME = #{userName} AND USER_PWD = #{userPwd}

  </select>

  <resultMap id="ResultMapWithVideo" type="com.kotlin.bean.User">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
    <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="user_description" jdbcType="VARCHAR" property="userDescription" />
    <result column="user_gender" jdbcType="VARCHAR" property="userGender" />
    <result column="registDate" jdbcType="TIMESTAMP" property="registdate" />
    <result column="video_count" jdbcType="BIGINT" property="videoCount" />
    <result column="follow_count" jdbcType="BIGINT" property="followCount" />
    <result column="fans_count" jdbcType="BIGINT" property="fansCount" />
    <result column="collection_count" jdbcType="BIGINT" property="collectionCount" />
    <result column="like_count" jdbcType="BIGINT" property="likeCount" />
    <result column="share_count" jdbcType="BIGINT" property="shareCount" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />

    <collection property="videoList" javaType="java.util.List" ofType="com.kotlin.bean.Video">
      <id column="video_id" jdbcType="BIGINT" property="videoId" />
      <result column="user_id" jdbcType="BIGINT" property="userId" />
      <result column="audio_id" jdbcType="BIGINT" property="audioId" />
      <result column="category_id" jdbcType="BIGINT" property="categoryId" />
      <result column="video_playUrl" jdbcType="VARCHAR" property="videoPlayurl" />
      <result column="video_webUrl" jdbcType="VARCHAR" property="videoWeburl" />
      <result column="video_cover" jdbcType="VARCHAR" property="videoCover" />
      <result column="video_type" jdbcType="VARCHAR" property="videoType" />
      <result column="video_tag" jdbcType="VARCHAR" property="videoTag" />
      <result column="video_title" jdbcType="VARCHAR" property="videoTitle" />
      <result column="video_description" jdbcType="VARCHAR" property="videoDescription" />
      <result column="video_category" jdbcType="VARCHAR" property="videoCategory" />
      <result column="video_status" jdbcType="VARCHAR" property="videoStatus" />
      <result column="video_duration" jdbcType="BIGINT" property="videoDuration" />
      <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
      <result column="like_count" jdbcType="BIGINT" property="likeCount" />
      <result column="share_count" jdbcType="BIGINT" property="shareCount" />
      <result column="comment_count" jdbcType="BIGINT" property="commentCount" />
      <result column="video_width" jdbcType="BIGINT" property="videoWidth" />
      <result column="video_height" jdbcType="BIGINT" property="videoHeight" />
    </collection>

  </resultMap>


  <select id="selectVideoWithUser" resultMap="ResultMapWithVideo">

    SELECT *
    FROM USER U,VIDEO V
    WHERE U.USER_ID = V.USER_ID
    AND U.USER_ID = #{userId}

  </select>



</mapper>